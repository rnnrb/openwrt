--- a/arch/mips/bmips/dma.c
+++ b/arch/mips/bmips/dma.c
@@ -3,15 +3,17 @@
 #include <linux/types.h>
 #include <linux/dma-map-ops.h>
 #include <asm/bmips.h>
 #include <asm/io.h>
 
+#define MIPS_BASE	0xff400000
+
 bool bmips_rac_flush_disable;
 
 void arch_sync_dma_for_cpu_all(void)
 {
-	void __iomem *cbr = BMIPS_GET_CBR();
+	void __iomem *cbr = (void *)MIPS_BASE;
 	u32 cfg;
 
 	if (boot_cpu_type() != CPU_BMIPS3300 &&
 	    boot_cpu_type() != CPU_BMIPS4350 &&
 	    boot_cpu_type() != CPU_BMIPS4380)
--- a/arch/mips/bmips/setup.c
+++ b/arch/mips/bmips/setup.c
@@ -169,16 +169,10 @@
 	/*
 	 * BCM3368/BCM6358 need special handling for their shared TLB, so
 	 * disable SMP for now
 	 */
 	bmips_smp_enabled = 0;
-
-	/*
-	 * RAC flush causes kernel panics on BCM6358 when booting from TP1
-	 * because the bootloader is not initializing it properly.
-	 */
-	bmips_rac_flush_disable = !!(read_c0_brcm_cmt_local() & (1 << 31));
 }
 
 static void bcm6368_quirks(void)
 {
 	bcm63xx_fixup_cpu1();
